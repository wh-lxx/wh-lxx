%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.10.3 (Build 14D136) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 352 200
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 352 200
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
0 0 0 sc
q
-266 2242 m
1734 2242 l
1734 -4438 l
-266 -4438 l
h
-266 2242 m
W*
28.313955 199.1389 m
28.313955 141.07124 l
36.971878 151.61145 47.348888 156.92245 59.386513 156.92245 c
65.585159 156.92245 71.143761 155.71924 76.11438 153.31281 c
81.109825 150.93254 84.847603 147.87256 87.35894 144.15822 c
89.895119 140.41769 91.611 136.31154 92.533028 131.78661 c
93.457458 127.28701 93.917274 120.27711 93.917274 110.78226 c
93.917274 48.68779 l
67.021477 48.68779 l
67.021477 104.60995 l
67.021477 115.699 66.533623 122.73671 65.509865 125.71653 c
64.484497 128.72498 62.69091 131.07988 60.104267 132.83195 c
57.515221 134.60938 54.288525 135.50012 50.396145 135.50012 c
45.938213 135.50012 41.94009 134.35008 38.457855 132.09906 c
34.922752 129.82513 32.360943 126.42325 30.748394 121.87295 c
29.10701 117.32101 28.285917 110.59903 28.313955 101.70619 c
28.285917 48.68779 l
1.4173555 48.68779 l
1.4173555 199.1389 l
28.313955 199.1389 l
28.313955 199.1389 l
h
134.23894 199.1389 m
134.23894 141.07124 l
142.89445 151.61145 153.27068 156.92245 165.30829 156.92245 c
171.48212 156.92245 177.06554 155.71924 182.06259 153.31281 c
187.0316 150.93254 190.77179 147.87256 193.28073 144.15822 c
195.81689 140.41769 197.53358 136.31154 198.45641 131.78661 c
199.38004 127.28701 199.84065 120.27711 199.84065 110.78226 c
199.84065 48.68779 l
172.96809 48.68779 l
172.96809 104.60995 l
172.96809 115.699 172.457 122.73671 171.43245 125.71653 c
170.40628 128.72498 168.61589 131.07988 166.02605 132.83195 c
163.46423 134.60938 160.2095 135.50012 156.31712 135.50012 c
151.86 135.50012 147.86508 134.35008 144.37964 132.09906 c
140.87257 129.82513 138.31076 126.42325 136.67018 121.87295 c
135.05682 117.32101 134.23894 110.59903 134.23894 101.70619 c
134.23894 48.68779 l
107.36637 48.68779 l
107.36637 199.1389 l
134.23894 199.1389 l
134.23894 199.1389 l
h
134.23894 199.1389 m
W*
0 0 352 200 rc
-8.5826445 209.1389 m
209.84065 209.1389 l
209.84065 38.68779 l
-8.5826445 38.68779 l
h
f
Q
q
-266 2242 m
1734 2242 l
1734 -4438 l
-266 -4438 l
h
-266 2242 m
W*
1.4950589 2.0502751 m
1.4950589 32.392429 l
5.0814323 32.392429 l
5.0814323 19.915297 l
19.118515 19.915297 l
19.09128 32.392429 l
22.677652 32.392429 l
22.677652 2.0502751 l
19.09128 2.0502751 l
19.09128 16.35718 l
5.0814323 16.35718 l
5.0814323 2.0502751 l
1.4950589 2.0502751 l
1.4950589 2.0502751 l
h
41.40498 9.1386995 m
44.836746 8.6675558 l
44.296028 6.3911786 43.301102 4.6661048 41.839958 3.4358959 c
40.379612 2.1811483 38.507523 1.5537746 36.22929 1.5537746 c
33.359871 1.5537746 31.105671 2.5467756 29.417023 4.5344138 c
27.751606 6.496695 26.90568 9.2957478 26.90568 12.853046 c
26.90568 16.54122 27.751606 19.418797 29.441856 21.457966 c
31.133707 23.497953 33.359871 24.517946 36.051453 24.517946 c
38.66293 24.517946 40.78896 23.524946 42.455978 21.536489 c
44.118992 19.521858 44.964916 16.723625 44.964916 13.087801 c
44.936878 12.879222 44.964916 12.538951 44.936878 12.093982 c
30.338249 12.093982 l
30.464817 9.6883669 31.080837 7.8307843 32.15667 6.5490441 c
33.259739 5.2673039 34.615143 4.6137557 36.256527 4.6137557 c
37.457325 4.6137557 38.507523 4.9802008 39.378281 5.7122731 c
40.224209 6.4181709 40.91713 7.5698562 41.40498 9.1386995 c
41.40498 9.1386995 l
h
30.518488 15.153963 m
41.454643 15.153963 l
41.300037 16.985371 40.892296 18.398802 40.199375 19.314098 c
39.148376 20.752068 37.767338 21.457966 36.077087 21.457966 c
34.565475 21.457966 33.284569 20.909115 32.258404 19.758249 c
31.208206 18.607382 30.645859 17.063076 30.518488 15.153963 c
30.518488 15.153963 l
h
61.562206 4.7708035 m
60.359005 3.5929439 59.180637 2.7569909 58.030308 2.2850289 c
56.902405 1.7885286 55.699203 1.5537746 54.392666 1.5537746 c
52.214565 1.5537746 50.575584 2.1549737 49.419647 3.3320153 c
48.269314 4.509057 47.703762 6.0263691 47.678928 7.8569593 c
47.678928 8.9293022 47.908836 9.9231215 48.344616 10.786885 c
48.779594 11.676005 49.36998 12.408895 50.060497 12.930753 c
50.753422 13.481238 51.573711 13.899216 52.444473 14.160962 c
53.084522 14.369541 54.057819 14.527407 55.38839 14.709811 c
58.080772 15.076257 60.027367 15.495051 61.307468 16.017727 c
61.332302 16.515045 61.332302 16.854498 61.332302 16.985371 c
61.332302 18.502684 60.999058 19.548851 60.387043 20.176226 c
59.54192 21.014631 58.260212 21.431791 56.619629 21.431791 c
55.05835 21.431791 53.903214 21.143869 53.162228 20.517313 c
52.418839 19.915297 51.856491 18.815962 51.520844 17.273293 c
48.269314 17.769793 l
48.549686 19.314098 49.037537 20.569662 49.730461 21.536489 c
50.396145 22.504951 51.368641 23.237024 52.649544 23.759699 c
53.93045 24.256201 55.38839 24.517946 57.079441 24.517946 c
58.745659 24.517946 60.104267 24.30855 61.152061 23.864397 c
62.20306 23.420246 62.972885 22.871397 63.458332 22.21703 c
63.946182 21.536489 64.30426 20.699718 64.484497 19.653549 c
64.587036 19.025358 64.664734 17.874491 64.664734 16.227123 c
64.664734 11.257211 l
64.664734 7.8046098 64.715202 5.6075745 64.869011 4.6914616 c
64.994774 3.7753487 65.304787 2.9140389 65.715736 2.0502751 c
62.255131 2.0502751 l
61.897854 2.8346968 61.692783 3.7246351 61.562206 4.7708035 c
61.562206 4.7708035 l
h
61.307468 13.087801 m
60.104267 12.538951 58.285046 12.068625 55.903477 11.676005 c
54.518433 11.467426 53.547539 11.204862 52.981987 10.917758 c
52.444473 10.656012 51.981457 10.237217 51.701084 9.7137241 c
51.393475 9.1910486 51.215637 8.6152067 51.215637 7.961658 c
51.215637 6.9678388 51.573711 6.1310678 52.238598 5.4767013 c
52.90749 4.7961602 53.877579 4.4820642 55.158485 4.4820642 c
56.464222 4.4820642 57.595329 4.7708035 58.591053 5.3973594 c
59.565952 6.0517259 60.306938 6.9154897 60.769154 8.0131893 c
61.127228 8.8515959 61.307468 10.080169 61.307468 11.728354 c
61.307468 13.087801 l
61.307468 13.087801 l
h
82.285789 2.0502751 m
82.285789 4.823153 l
81.057755 2.6514742 79.238533 1.5537746 76.83213 1.5537746 c
75.268448 1.5537746 73.835342 2.0232825 72.527199 3.0187373 c
71.221466 3.9855638 70.197701 5.3204713 69.504776 7.0455446 c
68.762192 8.772254 68.429749 10.76071 68.429749 13.035452 c
68.429749 15.206312 68.737358 17.220125 69.377411 19.000002 c
70.043098 20.777424 71.015587 22.137688 72.324532 23.106152 c
73.605438 24.047621 75.063377 24.517946 76.702362 24.517946 c
77.855095 24.517946 78.90609 24.256201 79.828918 23.681993 c
80.750145 23.133144 81.491936 22.399435 82.079918 21.48414 c
82.079918 32.392429 l
85.363487 32.392429 l
85.363487 2.0502751 l
82.285789 2.0502751 l
82.285789 2.0502751 l
h
71.834282 13.035452 m
71.809448 10.211861 72.349365 8.0925312 73.399567 6.7052741 c
74.476196 5.3204713 75.70343 4.6137557 77.137337 4.6137557 c
78.59848 4.6137557 79.828918 5.2934785 80.827049 6.6005754 c
81.850014 7.961658 82.365097 9.9754705 82.365097 12.722174 c
82.365097 15.729805 81.825981 17.92684 80.799812 19.339455 c
79.776848 20.725893 78.495949 21.431791 76.985138 21.431791 c
75.52639 21.431791 74.295959 20.752068 73.295425 19.418797 c
72.324532 18.058533 71.809448 15.939202 71.834282 13.035452 c
71.834282 13.035452 l
h
90.946114 2.0502751 m
90.946114 32.392429 l
94.505257 32.392429 l
94.505257 19.915297 l
108.54234 19.915297 l
108.54234 32.392429 l
112.12951 32.392429 l
112.12951 2.0502751 l
108.54234 2.0502751 l
108.54234 16.35718 l
94.505257 16.35718 l
94.505257 2.0502751 l
90.946114 2.0502751 l
90.946114 2.0502751 l
h
130.29129 2.0502751 m
130.29129 5.2934785 l
128.77968 2.7823474 126.70571 1.5537746 124.067 1.5537746 c
122.91667 1.5537746 121.83763 1.7885286 120.84111 2.3120217 c
119.83978 2.7823474 119.09879 3.4358959 118.61094 4.1687865 c
118.12389 4.9278517 117.79385 5.8423285 117.58717 6.9416642 c
117.45741 7.6737366 117.3829 8.824604 117.3829 10.419621 c
117.3829 24.021446 l
120.70973 24.021446 l
120.70973 11.832235 l
120.70973 9.8969469 120.78984 8.5898495 120.9156 7.9093084 c
121.11988 6.9154897 121.55646 6.1564245 122.22295 5.6075745 c
122.91667 5.0325503 123.73456 4.7708035 124.73269 4.7708035 c
125.73322 4.7708035 126.67928 5.0587249 127.54923 5.6345673 c
128.39436 6.1834168 129.03522 6.9940133 129.3949 7.961658 c
129.75537 8.9554768 129.93321 10.367272 129.93321 12.25103 c
129.93321 24.021446 l
133.2384 24.021446 l
133.2384 2.0502751 l
130.29129 2.0502751 l
130.29129 2.0502751 l
h
138.25868 2.0502751 m
138.25868 24.021446 l
141.22984 24.021446 l
141.22984 20.909115 l
142.66295 23.315548 144.76495 24.517946 147.48137 24.517946 c
148.6333 24.517946 149.73317 24.283192 150.70966 23.811232 c
151.70699 23.341722 152.44958 22.713531 152.93503 21.954466 c
153.42287 21.170862 153.78094 20.255568 153.9612 19.182405 c
154.09096 18.502684 154.16626 17.300285 154.16626 15.573575 c
154.16626 2.0502751 l
150.83704 2.0502751 l
150.83704 15.416528 l
150.83704 16.933022 150.70966 18.084707 150.45412 18.815962 c
150.19618 19.575026 149.73317 20.176226 149.09311 20.622013 c
148.42743 21.066164 147.63437 21.301735 146.76201 21.301735 c
145.35614 21.301735 144.12489 20.804417 143.09953 19.783606 c
142.07578 18.789785 141.56389 16.880672 141.58792 14.055446 c
141.56389 2.0502751 l
138.25868 2.0502751 l
138.25868 2.0502751 l
h
166.284 5.3973594 m
166.76944 2.1026244 l
165.84821 1.8662345 165.00308 1.7631718 164.25729 1.7631718 c
163.05649 1.7631718 162.13206 1.9709332 161.46558 2.4167204 c
160.80069 2.8346968 160.34088 3.3843646 160.05971 4.0902624 c
159.80257 4.7708035 159.67439 6.2611232 159.67439 8.4851513 c
159.67439 21.143869 l
157.21272 21.143869 l
157.21272 24.021446 l
159.67439 24.021446 l
159.67439 29.462503 l
162.97719 31.711887 l
162.95155 24.021446 l
166.284 24.021446 l
166.284 21.143869 l
162.95155 21.143869 l
162.95155 8.2749357 l
162.95155 7.2295852 163.00443 6.5490441 163.1326 6.2357664 c
163.23433 5.947845 163.43941 5.6869164 163.69734 5.5028758 c
163.97772 5.3458281 164.3374 5.2411294 164.84848 5.2411294 c
165.20816 5.2411294 165.6936 5.2934785 166.284 5.3973594 c
166.284 5.3973594 l
h
182.75471 9.1386995 m
186.16165 8.6675558 l
185.62334 6.3911786 184.6252 4.6661048 183.16406 3.4105394 c
181.70291 2.1811483 179.83243 1.5537746 177.58063 1.5537746 c
174.70961 1.5537746 172.42976 2.5467756 170.76675 4.5344138 c
169.07571 6.496695 168.23058 9.2957478 168.23058 12.853046 c
168.23058 16.54122 169.10133 19.418797 170.79239 21.457966 c
172.48264 23.497953 174.68398 24.517946 177.37636 24.517946 c
179.98622 24.517946 182.1395 23.524946 183.80492 21.536489 c
185.44389 19.521858 186.28983 16.723625 186.28983 13.087801 c
186.28983 12.879222 186.26419 12.538951 186.26419 12.093982 c
171.66235 12.093982 l
171.79053 9.6883669 172.40575 7.8307843 173.48157 6.5490441 c
174.58383 5.2673039 175.94084 4.6137557 177.58063 4.6137557 c
178.78223 4.6137557 179.83243 4.9802008 180.70238 5.7122731 c
181.54831 6.4181709 182.24123 7.5698562 182.75471 9.1386995 c
182.75471 9.1386995 l
h
171.86742 15.153963 m
182.77875 15.153963 l
182.62415 16.985371 182.2164 18.398802 181.52347 19.314098 c
180.47247 20.752068 179.09143 21.457966 177.42522 21.457966 c
175.88957 21.457966 174.60947 20.909115 173.58331 19.758249 c
172.53311 18.607382 171.96996 17.063076 171.86742 15.153963 c
171.86742 15.153963 l
h
190.1053 2.0502751 m
190.1053 24.021446 l
193.10368 24.021446 l
193.10368 20.699718 l
193.84628 22.269381 194.53679 23.289373 195.20168 23.786692 c
195.84174 24.283192 196.56349 24.517946 197.30368 24.517946 c
198.45641 24.517946 199.58511 24.126963 200.73544 23.315548 c
199.58511 19.862947 l
198.78885 20.411797 197.96936 20.674362 197.15068 20.674362 c
196.43211 20.674362 195.79286 20.437971 195.20168 19.941471 c
194.64174 19.444153 194.20435 18.789785 193.97444 17.901484 c
193.59154 16.593569 193.43613 15.128606 193.43613 13.558945 c
193.43613 2.0502751 l
190.1053 2.0502751 l
190.1053 2.0502751 l
h
190.1053 2.0502751 m
W*
0 0 352 200 rc
-8.504941 42.392429 m
210.73544 42.392429 l
210.73544 -8.4462252 l
-8.504941 -8.4462252 l
h
f
Q
0.88235295 0.0039215689 0.10980392 sc
q
-266 2242 m
1734 2242 l
1734 -4438 l
-266 -4438 l
h
-266 2242 m
W*
350.61493 90.144356 m
350.61493 53.604534 321.61954 24.021446 285.85995 24.021446 c
250.09875 24.021446 221.10095 53.604534 221.10095 90.144356 c
221.10095 126.65964 250.09875 156.26891 285.85995 156.26891 c
321.61954 156.26891 350.61493 126.65964 350.61493 90.144356 c
W*
0 0 352 200 rc
211.10095 166.26891 m
360.61493 166.26891 l
360.61493 14.021446 l
211.10095 14.021446 l
h
f
Q
1 0.99871939 0.9961471 sc
q
-266 2242 m
1734 2242 l
1734 -4438 l
-266 -4438 l
h
-266 2242 m
W*
259.24213 64.746758 m
246.66458 64.746758 l
246.66458 113.21486 l
258.32248 113.21486 l
258.32248 106.33665 l
260.34518 109.57904 262.11475 111.72372 263.72488 112.74372 c
265.31659 113.78989 267.13342 114.3142 269.15851 114.3142 c
272.0015 114.3142 274.76758 113.50278 277.43112 111.88078 c
273.53714 100.71156 l
271.40952 102.12417 269.4397 102.80553 267.62048 102.80553 c
265.87656 102.80553 264.39377 102.30821 263.16495 101.33974 c
261.93369 100.34593 260.9588 98.541512 260.26828 95.977211 c
259.57855 93.361382 259.24213 87.947319 259.24213 79.708847 c
259.24213 64.746758 l
259.24213 64.746758 l
h
313.62729 64.746758 m
313.62729 71.991409 l
311.8866 69.428749 309.62918 67.362587 306.81262 65.871452 c
303.99527 64.381134 301.02414 63.648239 297.87195 63.648239 c
294.69492 63.648239 291.82788 64.354141 289.31735 65.793747 c
286.77957 67.232536 284.93872 69.219353 283.80841 71.835182 c
282.68292 74.398666 282.12057 77.98214 282.12057 82.559433 c
282.12057 113.21486 l
294.67087 113.21486 l
294.67087 90.954948 l
294.67087 84.129089 294.90079 79.943604 295.36301 78.426292 c
295.8252 76.883621 296.66873 75.655045 297.87195 74.76429 c
299.10236 73.875992 300.66284 73.431839 302.53494 73.431839 c
304.68741 73.404846 306.60757 74.033035 308.29861 75.209259 c
310.01529 76.412476 311.16724 77.904434 311.78326 79.681854 c
312.4241 81.460915 312.73251 85.828812 312.73251 92.760185 c
312.73251 113.21486 l
325.31006 113.21486 l
325.31006 64.746758 l
313.62729 64.746758 l
313.62729 64.746758 l
h
313.62729 64.746758 m
W*
0 0 352 200 rc
236.66458 124.3142 m
335.31006 124.3142 l
335.31006 53.648239 l
236.66458 53.648239 l
h
f
ep
end
